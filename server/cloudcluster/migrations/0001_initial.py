# Generated by Django 3.0.3 on 2022-10-11 13:51

import cloudcluster.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CapiCluster',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('title', models.CharField(max_length=1024)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('contact', models.CharField(blank=True, max_length=1024, null=True)),
                ('providers', models.CharField(blank=True, max_length=254, null=True)),
                ('capi_config', models.TextField(blank=True, null=True)),
                ('installstep', models.IntegerField(blank=True, null=True)),
                ('resizestep', models.IntegerField(blank=True, default=0, null=True)),
                ('kubeconfig', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('error_msg', models.TextField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, default=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Clusters',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('tfstate', models.TextField(blank=True, null=True)),
                ('config', models.TextField(blank=True, null=True)),
                ('tfcode', models.TextField(blank=True, null=True)),
                ('resources', models.TextField(blank=True, null=True)),
                ('kubeconfig', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=1024)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('contact', models.CharField(blank=True, max_length=1024, null=True)),
                ('error_msg', models.TextField(blank=True, null=True)),
                ('error_msg_delete', models.TextField(blank=True, null=True)),
                ('installstep', models.IntegerField(blank=True, null=True)),
                ('resizestep', models.IntegerField(blank=True, default=0, null=True)),
                ('resizeconfig', models.TextField(blank=True, null=True)),
                ('kube_upgrade_status', models.IntegerField(default=0)),
                ('providers', models.CharField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('grafana_admin_password', models.TextField()),
                ('grafana_address', models.CharField(blank=True, max_length=1024, null=True)),
                ('kibana_address', models.CharField(blank=True, max_length=1024, null=True)),
                ('es_admin_password', models.TextField()),
                ('krb_admin_password', models.TextField()),
                ('kdc_master_password', models.TextField()),
                ('ldap_admin_password', models.TextField()),
                ('vpn_secrets', models.TextField()),
                ('ca_password', models.TextField()),
                ('used_resources_graph_path', models.TextField(blank=True, null=True)),
                ('terraform_graph_index', models.TextField(blank=True, null=True)),
                ('canceled', models.BooleanField(default=False)),
                ('gateway_cloud', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DaiteapUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=20)),
                ('selected', models.BooleanField(default=False)),
                ('role', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('daiteap_user', models.ManyToManyField(to='cloudcluster.DaiteapUser')),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=62, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('publicIP', models.CharField(blank=True, max_length=15, null=True)),
                ('operating_system', models.CharField(blank=True, max_length=500, null=True)),
                ('privateIP', models.CharField(blank=True, max_length=15, null=True)),
                ('provider', models.CharField(blank=True, max_length=20, null=True)),
                ('instance_id', models.CharField(blank=True, max_length=40, null=True)),
                ('region', models.CharField(blank=True, max_length=25, null=True)),
                ('zone', models.CharField(blank=True, max_length=30, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('kube_master', models.BooleanField(blank=True, null=True)),
                ('kube_etcd', models.BooleanField(blank=True, null=True)),
                ('kube_name', models.TextField(blank=True, null=True)),
                ('cpu', models.IntegerField(blank=True, null=True)),
                ('ram', models.IntegerField(blank=True, null=True)),
                ('hdd', models.IntegerField(blank=True, null=True)),
                ('sync_ssh_status', models.IntegerField(blank=True, default=0, null=True)),
                ('sync_ssh_error_message', models.TextField(blank=True, null=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Clusters')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('contact', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('owner', models.TextField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=150)),
                ('phone', models.TextField(blank=True, null=True)),
                ('company', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='YaookCapiCluster',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=1024)),
                ('title', models.CharField(max_length=1024)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('contact', models.CharField(blank=True, max_length=1024, null=True)),
                ('providers', models.CharField(blank=True, max_length=254, null=True)),
                ('yaookcapi_config', models.TextField(blank=True, null=True)),
                ('installstep', models.IntegerField(blank=True, null=True)),
                ('resizestep', models.IntegerField(blank=True, default=0, null=True)),
                ('kubeconfig', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('error_msg', models.TextField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, default=5, null=True)),
                ('wireguard_public_key', models.TextField()),
                ('wireguard_private_key', models.TextField()),
                ('wireguard_indent', models.TextField(blank=True, null=True)),
                ('wireguard_config', models.TextField()),
                ('wireguard_user_configs', models.TextField()),
                ('daiteap_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.DaiteapUser')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Project')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.TextField(blank=True, default='trial', null=True)),
                ('limit_kubernetes_cluster_environments', models.IntegerField(blank=True, default=1, null=True)),
                ('limit_compute_vms_environments', models.IntegerField(blank=True, default=1, null=True)),
                ('limit_nodes', models.IntegerField(blank=True, default=10, null=True)),
                ('limit_services', models.IntegerField(blank=True, default=3, null=True)),
                ('daiteap_user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.DaiteapUser')),
            ],
        ),
        migrations.CreateModel(
            name='TerraformGraphPlan',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('path', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TenantSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_compute', models.BooleanField(default=True)),
                ('enable_storage', models.BooleanField(default=True)),
                ('enable_service_catalog', models.BooleanField(default=True)),
                ('enable_templates', models.BooleanField(default=True)),
                ('enable_kubernetes_dlcm', models.BooleanField(default=True)),
                ('enable_kubernetes_k3s', models.BooleanField(default=False)),
                ('enable_kubernetes_capi', models.BooleanField(default=False)),
                ('enable_kubernetes_yaookcapi', models.BooleanField(default=False)),
                ('advanced_cluster_configuration', models.BooleanField(default=False)),
                ('enable_cluster_resize', models.BooleanField(default=False)),
                ('providers_enable_gcp', models.BooleanField(default=True)),
                ('providers_enable_aws', models.BooleanField(default=True)),
                ('providers_enable_ali', models.BooleanField(default=False)),
                ('providers_enable_azure', models.BooleanField(default=True)),
                ('providers_enable_onprem', models.BooleanField(default=False)),
                ('providers_enable_openstack', models.BooleanField(default=False)),
                ('providers_enable_arm', models.BooleanField(default=False)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Tenant')),
            ],
        ),
        migrations.CreateModel(
            name='SynchronizedUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('synchronized', models.BooleanField(default=False, null=True)),
                ('capicluster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.CapiCluster')),
                ('cluster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Clusters')),
                ('daiteapuser', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cloudcluster.DaiteapUser')),
                ('yaookcluster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.YaookCapiCluster')),
            ],
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request', models.TextField(blank=True, null=True)),
                ('authorized', models.BooleanField(blank=True, null=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('daiteap_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.DaiteapUser')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo_url', models.CharField(blank=True, max_length=254, null=True)),
                ('options', models.TextField(blank=True, null=True)),
                ('values_file', models.TextField(blank=True, null=True)),
                ('accessible_from_browser', models.BooleanField(blank=True, default=True, null=True)),
                ('implemented', models.BooleanField(blank=True, default=False, null=True)),
                ('visible', models.BooleanField(blank=True, default=True, null=True)),
                ('categories', models.ManyToManyField(to='cloudcluster.ServiceCategory')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Tenant'),
        ),
        migrations.AddField(
            model_name='project',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to=cloudcluster.models.Profile.upload_to_profile_pictures)),
                ('timezone', models.CharField(default='UTC', max_length=150)),
                ('google_auth_creds', models.BinaryField(blank=True, null=True)),
                ('company', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('sshpubkey', models.TextField(blank=True, null=True)),
                ('wireguard_public_key', models.TextField(blank=True, null=True)),
                ('news_subscribbed', models.BooleanField(default=True)),
                ('ssh_synchronized_machines', models.ManyToManyField(blank=True, to='cloudcluster.Machine')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('group', models.ManyToManyField(to='cloudcluster.Group')),
            ],
        ),
        migrations.AddField(
            model_name='machine',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Project'),
        ),
        migrations.CreateModel(
            name='EnvironmentTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('contact', models.CharField(blank=True, max_length=1024, null=True)),
                ('name', models.CharField(max_length=1024)),
                ('config', models.TextField(blank=True, null=True)),
                ('providers', models.CharField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('daiteap_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.DaiteapUser')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Tenant')),
            ],
        ),
        migrations.AddField(
            model_name='daiteapuser',
            name='projects',
            field=models.ManyToManyField(to='cloudcluster.Project'),
        ),
        migrations.AddField(
            model_name='daiteapuser',
            name='tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Tenant'),
        ),
        migrations.AddField(
            model_name='daiteapuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ClusterUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('first_name', models.CharField(blank=True, max_length=23, null=True)),
                ('last_name', models.CharField(blank=True, max_length=23, null=True)),
                ('type', models.CharField(blank=True, max_length=30, null=True)),
                ('public_ssh_key', models.TextField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('kubernetes_user', models.BooleanField()),
                ('kubeconfig', models.TextField()),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Clusters')),
            ],
        ),
        migrations.CreateModel(
            name='ClusterService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('namespace', models.CharField(blank=True, max_length=23, null=True)),
                ('providers', models.CharField(blank=True, max_length=254, null=True)),
                ('publicIP', models.CharField(blank=True, max_length=15, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('service_type', models.CharField(blank=True, max_length=15, null=True)),
                ('connection_info', models.TextField(blank=True, null=True)),
                ('capi_cluster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.CapiCluster')),
                ('cluster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Clusters')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Service')),
                ('yaookcapi_cluster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.YaookCapiCluster')),
            ],
        ),
        migrations.AddField(
            model_name='clusters',
            name='daiteap_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.DaiteapUser'),
        ),
        migrations.AddField(
            model_name='clusters',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Project'),
        ),
        migrations.AddField(
            model_name='clusters',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CloudAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('contact', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('credentials', models.TextField()),
                ('provider', models.CharField(max_length=500)),
                ('regions', models.TextField(blank=True, null=True)),
                ('regions_update_status', models.IntegerField(default=-2)),
                ('regions_failed_msg', models.TextField(blank=True, null=True)),
                ('valid', models.BooleanField(default=True, null=True)),
                ('shared', models.BooleanField(default=False, null=True)),
                ('tenant', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Tenant')),
                ('user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CeleryTask',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('task_id', models.CharField(max_length=36)),
                ('cluster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Clusters')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='capicluster',
            name='daiteap_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.DaiteapUser'),
        ),
        migrations.AddField(
            model_name='capicluster',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cloudcluster.Project'),
        ),
        migrations.AddField(
            model_name='capicluster',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Bucket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('provider', models.CharField(max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('storage_account', models.CharField(blank=True, max_length=1000, null=True)),
                ('storage_class', models.CharField(blank=True, max_length=100, null=True)),
                ('bucket_location', models.CharField(blank=True, max_length=100, null=True)),
                ('credential', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cloudcluster.CloudAccount')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cloudcluster.Project')),
            ],
        ),
    ]
