---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: {{ CLUSTER_NAME }}
  namespace: '{{ NAMESPACE }}'
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"] # CIDR block used by Calico.
    serviceDomain: "cluster.local"
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: OpenStackCluster
    name: {{ CLUSTER_NAME }}
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    name: {{ CLUSTER_NAME }}-control-plane
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: OpenStackCluster
metadata:
  name: {{ CLUSTER_NAME }}
  namespace: '{{ NAMESPACE }}'
spec:
  cloudName: {{ OPENSTACK_CLOUD }}
  cloudsSecret:
    name: {{ CLUSTER_NAME }}-cloud-config
    namespace: {{ NAMESPACE }}
  managedSecurityGroups: false
  nodeCidr: 10.6.0.0/24
  dnsNameservers:
  - {{ OPENSTACK_DNS_NAMESERVERS }}
  disablePortSecurity: true
  useOctavia: false
{% if 'zone' in control_plane %}
  controlPlaneAvailabilityZones: [{{ control_plane.zone }}]
{% endif %}
  externalNetworkId: {{ OPENSTACK_EXTERNAL_NETWORK_ID }}
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
metadata:
  name: "{{ CLUSTER_NAME }}-control-plane"
  namespace: '{{ NAMESPACE }}'
spec:
  replicas: {{ control_plane.replicas }}
  infrastructureTemplate:
    kind: OpenStackMachineTemplate
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    name: "{{ CLUSTER_NAME }}-control-plane"
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        name: '{{ local_hostname }}'
        kubeletExtraArgs:
          cloud-provider: external
    clusterConfiguration:
      imageRepository: k8s.gcr.io
      apiServer:
        extraArgs:
          cloud-provider: external
      controllerManager:
        extraArgs:
          cloud-provider: external
    joinConfiguration:
      nodeRegistration:
        name: '{{ local_hostname }}'
        kubeletExtraArgs:
          cloud-provider: external
  version: "{{ KUBERNETES_VERSION }}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: OpenStackMachineTemplate
metadata:
  name: {{ CLUSTER_NAME }}-control-plane
  namespace: '{{ NAMESPACE }}'
spec:
  template:
    spec:
      flavor: {{ control_plane.instanceType }}
      image: {{ control_plane.operatingSystem }}
      sshKeyName: {{ OPENSTACK_SSH_KEY_NAME }}
      cloudName: {{ OPENSTACK_CLOUD }}
      cloudsSecret:
        name: {{ CLUSTER_NAME }}-cloud-config
        namespace: {{ NAMESPACE }}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: {{ CLUSTER_NAME }}-md-0
  namespace: '{{ NAMESPACE }}'
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: '{{ local_hostname }}'
          kubeletExtraArgs:
            cloud-provider: external
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ CLUSTER_NAME }}-cloud-config
  labels:
    clusterctl.cluster.x-k8s.io/move: "true"
  namespace: '{{ NAMESPACE }}'
data:
  clouds.yaml: {{ OPENSTACK_CLOUD_YAML_B64 }}
  cacert: {{ OPENSTACK_CLOUD_CACERT_B64 }}

{% for worker_node in worker_nodes %}

---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: "{{ CLUSTER_NAME }}-md-{{ loop.index }}"
  namespace: '{{ NAMESPACE }}'
spec:
  clusterName: "{{ CLUSTER_NAME }}"
  replicas: 1
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "{{ CLUSTER_NAME }}"
      version: "{{ KUBERNETES_VERSION }}"
{% if 'zone' in worker_node %}
      failureDomain: {{ worker_node.zone }}
{% endif %}
      bootstrap:
        configRef:
          name: "{{ CLUSTER_NAME }}-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "{{ CLUSTER_NAME }}-md-{{ loop.index }}"
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: OpenStackMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: OpenStackMachineTemplate
metadata:
  name: {{ CLUSTER_NAME }}-md-{{ loop.index }}
  namespace: '{{ NAMESPACE }}'
spec:
  template:
    spec:
      cloudName: {{ OPENSTACK_CLOUD }}
      cloudsSecret:
        name: {{ CLUSTER_NAME }}-cloud-config
        namespace: {{ NAMESPACE }}
      flavor: {{ worker_node.instanceType }}
      image: {{ worker_node.operatingSystem }}
      sshKeyName: {{ OPENSTACK_SSH_KEY_NAME }}
---

{% endfor %}