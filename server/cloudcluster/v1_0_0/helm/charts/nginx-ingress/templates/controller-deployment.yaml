{{- if eq .Values.kind "deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ default (include "nginx-ingress.name" .) .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "nginx-ingress.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "nginx-ingress.appName" . }}
  template:
    metadata:
      labels:
        app: {{ include "nginx-ingress.appName" . }}
{{- if .Values.pod.extraLabels }}
{{ toYaml .Values.pod.extraLabels | indent 8 }}
{{- end }}
{{- if or (.Values.prometheus.create) (.Values.pod.annotations) }}
      annotations:
{{- if .Values.prometheus.create }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.prometheus.port }}"
        prometheus.io/scheme: "{{ .Values.prometheus.scheme }}"
{{- end }}
{{- if .Values.pod.annotations }}
{{ toYaml .Values.pod.annotations | indent 8 }}
{{- end }}
{{- end }}
    spec:
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.volumes }}
      volumes:
{{ toYaml .Values.volumes | indent 6 }}
{{- end }}
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
{{- end }}
      serviceAccountName: {{ include "nginx-ingress.serviceAccountName" . }}
      hostNetwork: {{ .Values.hostNetwork }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        name: {{ include "nginx-ingress.name" . }}
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
{{ if .Values.customPorts }}
{{ toYaml .Values.customPorts | indent 8 }}
{{ end }}
{{- if .Values.prometheus.create }}
        - name: prometheus
          containerPort: {{ .Values.prometheus.port }}
{{- end }}
{{- if .Values.readyStatus.enable }}
        - name: readiness-port
          containerPort: {{ .Values.readyStatus.port}}
        readinessProbe:
          httpGet:
            path: /nginx-ready
            port: readiness-port
          periodSeconds: 1
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        securityContext:
          allowPrivilegeEscalation: true
          runAsUser: 101 #nginx
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
{{- if .Values.volumeMounts }}
        volumeMounts:
{{ toYaml .Values.volumeMounts | indent 8 }}
{{- end }}
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        args:
          - -nginx-plus={{ .Values.nginxplus }}
          - -nginx-reload-timeout={{ .Values.nginxReloadTimeout }}
          - -enable-app-protect={{ .Values.appprotect.enable }}
          - -enable-app-protect-dos={{ .Values.appprotectdos.enable }}
{{- if .Values.appprotectdos.enable }}
          - -app-protect-dos-debug={{ .Values.appprotectdos.debug }}
          - -app-protect-dos-max-daemons={{ .Values.appprotectdos.maxWorkers }}
          - -app-protect-dos-max-workers={{ .Values.appprotectdos.maxDaemons }}
          - -app-protect-dos-memory={{ .Values.appprotectdos.memory }}
{{ end }}
          - -nginx-configmaps=$(POD_NAMESPACE)/{{ include "nginx-ingress.configName" . }}
{{- if .Values.defaultTLS.secret }}
          - -default-server-tls-secret={{ .Values.defaultTLS.secret }}
{{ else }}
          - -default-server-tls-secret=$(POD_NAMESPACE)/{{ include "nginx-ingress.defaultTLSName" . }}
{{- end }}
          - -ingress-class={{ .Values.ingressClass }}
{{- if .Values.watchNamespace }}
          - -watch-namespace={{ .Values.watchNamespace }}
{{- end }}
          - -health-status={{ .Values.healthStatus }}
          - -health-status-uri={{ .Values.healthStatusURI }}
          - -nginx-debug={{ .Values.nginxDebug }}
          - -v={{ .Values.logLevel }}
          - -nginx-status={{ .Values.nginxStatus.enable }}
{{- if .Values.nginxStatus.enable }}
          - -nginx-status-port={{ .Values.nginxStatus.port }}
          - -nginx-status-allow-cidrs={{ .Values.nginxStatus.allowCidrs }}
{{- end }}
{{- if .Values.reportIngressStatus.enable }}
          - -report-ingress-status
{{- if .Values.reportIngressStatus.ingressLink }}
          - -ingresslink={{ .Values.reportIngressStatus.ingressLink }}
{{- else if .Values.reportIngressStatus.externalService }}
          - -external-service={{ .Values.reportIngressStatus.externalService }}
{{- else if and (.Values.service.create) (eq .Values.service.type "LoadBalancer") }}
          - -external-service={{ include "nginx-ingress.serviceName" . }}
{{- end }}
          - -enable-leader-election={{ .Values.reportIngressStatus.enableLeaderElection }}
          - -leader-election-lock-name={{ include "nginx-ingress.leaderElectionName" . }}
{{- end }}
{{- if .Values.wildcardTLS.secret }}
          - -wildcard-tls-secret={{ .Values.wildcardTLS.secret }}
{{- else if and .Values.wildcardTLS.cert .Values.wildcardTLS.key }}
          - -wildcard-tls-secret=$(POD_NAMESPACE)/{{ include "nginx-ingress.wildcardTLSName" . }}
{{- end }}
          - -enable-prometheus-metrics={{ .Values.prometheus.create }}
          - -prometheus-metrics-listen-port={{ .Values.prometheus.port }}
          - -prometheus-tls-secret={{ .Values.prometheus.secret }}
          - -enable-custom-resources={{ .Values.enableCustomResources }}
          - -enable-snippets={{ .Values.enableSnippets }}
{{- if .Values.enableCustomResources }}
          - -enable-tls-passthrough={{ .Values.enableTLSPassthrough }}
          - -enable-preview-policies={{ .Values.enablePreviewPolicies }}
{{- if .Values.globalConfiguration.create }}
          - -global-configuration=$(POD_NAMESPACE)/{{ include "nginx-ingress.name" . }}
{{- end }}
{{- end }}
          - -ready-status={{ .Values.readyStatus.enable }}
          - -ready-status-port={{ .Values.readyStatus.port }}
          - -enable-latency-metrics={{ .Values.enableLatencyMetrics }}
{{- if .Values.initContainers }}
      initContainers: {{ toYaml .Values.initContainers | nindent 8 }}
{{- end }}
{{- end }}
